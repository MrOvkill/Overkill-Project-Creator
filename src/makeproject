#!/usr/bin/env python

import os, sys, time

"""
Overkill Project Creator 0.0.3
Copyright (c) 2014 Samuel "MrOverkill" Meyers
"""

def fmt(string, name, cls):
	a = string.replace("{DATE}", time.strftime("%x"))
	b = a.replace("{PROJECT}", name)
	c = b.replace("{CLASS}", cls)
	d = c.replace("{CLASSLOWER}", cls.lower())
	return d

def projfmt(string, name, ptype, targets):
	string = string.replace("{NAME}", name)
	a = string.replace("{TYPE}", ptype)
	b = a.replace("{OPCVERSION}", "0.0.3")
	c = b.replace("{VERSION}", "0.0.1")
	d = c.replace("{SOURCES}", "src")
	e = d.replace("{TARGETS}", targets)
	return e

def makecpp(name):
	os.makedirs(name)
	os.chdir(name)
	os.makedirs("src")
	os.makedirs("out")
	os.makedirs("bin")
	os.makedirs("targets")
	os.chdir("targets")
	f = open("default.target", "w")
	f.write("""Name###Default
Sources###main.cxx
Complier Flags###none
Linker Flags###none
Target Binary###main.out""")
	f.close()
	os.chdir("..")
	os.chdir("src")
	f = open("main.cxx", "w")
	e = open("/usr/local/opc/templates/Main-C++.template", "r")
	f.write(fmt(e.read(), name, ""))
	f.close()
	os.chdir("..")
	f = open("Makefile", "w")
	f.write("""default:
	g++ -c src/main.cxx -o out/main.o
	g++ out/main.o -o bin/main.out""")
	f.close()
	f = open(name + ".opf", "w")
	f.write(projfmt("""Name###{NAME}
Type###{TYPE}
OPC Version###{OPCVERSION}
Project Version###{VERSION}
Source Directory###{SOURCES}
Targets###{TARGETS}""", name, "CPP", "default"))
	f.close()
	print "Project created!"
	print "Building..."
	os.system("make")
	print "Succeeded!"
	print "Running..."
	os.system("./bin/main.out")
	print "Done!"

print "Overkill Project Creator 0.0.3"
print "Copyright (c) 2014 Samuel \"MrOverkill\" Meyers"
print ""

usage = """Usage: {0} <language> <projectname>

language may be:
- CPP
projectname may be:
- Any name your filesystem deems "legal"

example: {0} CPP MyAwesomeProject""".format(sys.argv[0])

argc = len(sys.argv)

if argc < 3:
	print usage
elif os.path.exists(sys.argv[2] + "/" + sys.argv[2] + ".opf"):
	print "Error: Project \"" + sys.argv[2] + "\" Already exists!"
else:
	if sys.argv[1] == "CPP":
		makecpp(sys.argv[2])
	else:
		print usage
